@using BugTracker.Models
@model PMDashboardVM
@{
    ViewBag.Title = "Project Manager Dashboard";
    var DispTicketsVM1 = (DispTicketsVM)ViewData["MyProjectsTicketsList"];
    var histories = (List<TopDispHist>)ViewData["ticketHistoryList"];
    var VMList = (List<PMTicketProjectsSelectVM>)ViewData["ViewModelList"];
}

<div class="col-md-12">
    <div class="panel panel-info">
        <div class="panel-heading">
            <div class="pull-left">
                <strong>Project Manager View</strong><br />
            </div>
            <div class="pull-right ticket-box-header-btns"><a href="#" data-perform="panel-collapse"><i class="ti-minus"></i></a> </div>
            <br />
            <br />
        </div>
        <div class="panel-wrapper collapse in" aria-expanded="true">
            <div class="panel-body">
                <div class="col-md-4">
                    <div class="col-md-12 center-block hist-list-container">
                        <div class="row"><h3>15 Most Recent Ticket Edits</h3></div>
                        <div class="row">
                            <div class="col-xs-6">
                                <h4>Date</h4>
                            </div>
                            <div class="col-xs-6 text-right">
                                <h4> Editor</h4>
                            </div>
                        </div>
                        @{ foreach (var item in histories)
                            {<div class="hist-header">
                            <a class="collapsed" data-toggle="collapse" href="#history-@item.HistEntriesList.First().Id" aria-expanded="false">
                                <div class="row">
                                    <div class="col-xs-6">
                                        @item.Created.Value.ToString("MM-dd-yyyy, h:mm tt")
                                    </div>
                                    <div class="col-xs-6 text-right">
                                        @item.DisplayName
                                    </div>
                                </div>
                            </a>
                        </div>
                            <div class="collapse hist-list-property hist-header" id="history-@item.HistEntriesList.First().Id">
                                @foreach (var x in item.HistEntriesList)
                                {
                                    <div class="row p-l-20 p-r-20">
                                        <h4><b>@x.PropertyChanged</b></h4>
                                        @x.OldAndNewValues
                                    </div>
                                }
                            </div>

                            } }
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="col-md-4 col-lg-4 col-xs-12">
                    <div class="">
                        <h3 class="box-title">Activity Stats - My Projects</h3>
                        <ul class="basic-list user-list-1">
                            <li>Tickets Created < 24hrs <span class="pull-right label-danger label" style="margin-top: 7px;"> @DispTicketsVM1.TicketList.Where(t => t.Created > DateTimeOffset.UtcNow.Subtract(new TimeSpan(24, 0, 0))).Count() </span></li>
                            <li>Tickets Created < 72hrs <span class="pull-right label-warning label" style="margin-top: 7px;">@DispTicketsVM1.TicketList.Where(t => t.Created > DateTimeOffset.UtcNow.Subtract(new TimeSpan(72, 0, 0))).Count()</span></li>
                            <li>Tickets Created < 7days <span class="pull-right label-success label" style="margin-top: 7px;">@DispTicketsVM1.TicketList.Where(t => t.Created > DateTimeOffset.UtcNow.Subtract(new TimeSpan(168, 0, 0))).Count()</span></li>
                            <li>Tickets Resolved < 24hrs <span class="pull-right label-info label" style="margin-top: 7px;">@DispTicketsVM1.TicketList.Where(t=> t.Created > DateTimeOffset.UtcNow.Subtract(new TimeSpan(24, 0, 0))).Where(t=>t.TicketStatus.Name == "Resolved").Count()</span></li>
                        </ul>
                        <br />
                        <p class="text-muted"> If you want to go to a project directly click on the project names.</p>
                        <p class="text-muted"> Project Names <u>to the right</u> will take you to the Developer Project View. Project Names <u>below</u> will take you to the Manage Project View.</p>
                    </div>
                </div>
                <div class="col-md-4 pull-right" >
                    <h3 class="box-title">Ticket Stats - All Projects</h3>
                    <div class="stats-row" style="overflow-y: auto; max-height: 420px;">
                        <ul class="basic-list user-list-1">
                            
                            @foreach (var item in Model.MyProjects)
                            {
                            <li class="col-md-11 center-block" style="padding:5px">
                                <div class="row">
                                    <div class="row">
                                        <h4><u><b><a class="pmProjAnchor" href="@Url.Action("ProjectDetails", "BT",new { id = item.Id })">@item.Name</a></b></u></h4>
                                    </div>
                                    <div class="row m-t-5">
                                        <div class="col-md-6">
                                            <div class="col-xs-8"><b><label class="label-megna label">Open</label></b></div><div class="col-xs-4"> @item.Tickets.Where(t => t.TicketStatus.Name == "Open").Count()</div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="col-xs-8">
                                                <b><label class="label-megna label">Pending</label></b></div> <div class="col-xs-4">@item.Tickets.Where(t => t.TicketStatus.Name == "Pending").Count()</div>
                                            </div>
                                    </div>
                                    <br />
                                    <div class="row m-t-5">
                                        <div class="col-md-6">
                                            <div class="col-xs-8"><b><label class="label-megna label">InProgress</label></b></div><div class="col-xs-4"> @item.Tickets.Where(t => t.TicketStatus.Name == "InProgress").Count()</div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="col-xs-8">
                                                <b><label class="label-megna label">Resolved</label></b></div> <div class="col-xs-4"> @item.Tickets.Where(t => t.TicketStatus.Name == "Resolved").Count()</div>
                                            </div>
                                    </div>
                                </div>
                            </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



    @Html.Partial("_DisplayTicketsPartial_VM", DispTicketsVM1)




    @for (var i = 0; i < VMList.ToArray().Length; i++)
    {
        <div class="col-md-12">
            <div class="panel panel-inverse">
                <div class="panel-heading">
                    <div class="pull-left">
                        <strong>Unassigned Tickets - Project: <a href="@Url.Action("ManageProject", "BT", new { Id = @VMList[i].ProjectId } )"><u> @VMList[i].ProjectName</u></a></strong><br />
                        Bulk Assign Developers
                    </div>
                    <div class="pull-right ticket-box-header-btns"><a href="#" data-perform="panel-collapse"><i class="ti-minus"></i></a> </div>
                    <br />
                    <br />
                </div>
                <div class="panel-wrapper collapse" aria-expanded="false">
                    <div class="panel-body">
                        @using (Html.BeginForm("BulkAssign", "BT", new { Id = VMList[i].ProjectId }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row m-t-10 m-l-10">
                                <div class="row">

                                    <div class="col-xs-2"><h4>Pick A Developer:</h4></div>
                                    <div class="col-xs-5">
                                        <select class="form-control" id="selector_@VMList[i].ProjectId" name="selector1" required="required">

                                            <option value="">- Select Developer -</option>
                                            @foreach (var item in VMList[i].PMUsersInProjectVMList)
                                            {
                                                <option value="@item.UserId">@item.UserDisplayName</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="row col-xs-7 m-t-10">
                                    <div class="pull-right">
                                        <input type="submit" value="Submit" class="fcbtn btn btn-success btn-outline btn-1d" />
                                    </div>
                                </div>
                            </div>
                                            @*ViewBag.SelectList1 = new SelectList(VMList[i].PMUsersInProjectVMList.ToList(), "UserId", "UserDisplayName", "Select Developer");
                                                @Html.DropDownList("SelectList1", null, "- Select Developer -", htmlAttributes: new { @class = "form-control" })*@

                                            @Html.Partial("_DisplayTicketsSelectUsersPartial_VM", VMList[i].PMAssignUsersTicketList)


                        }

                    </div>
                </div>
            </div>
        </div>
    }

